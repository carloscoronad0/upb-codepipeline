AWSTemplateFormatVersion : '2010-09-09'
Transform:
  - AWS::Serverless-2016-10-31

Description: Lambda CloudFormation Lab
Resources:
#  MyLambdaRole:
#   Type: AWS::IAM::Role
#    Properties:
#      RoleName: my-upb-cf-role
#      AssumeRolePolicyDocument:
#        Version: '2012-10-17'
#        Statement:
#        - Effect: Allow
#          Principal:
#            Service:
#            - lambda.amazonaws.com
#          Action:
#          - sts:AssumeRole
#      Path: "/"
#      Policies:
#      - PolicyName: my-dynmoapi-policy
#        PolicyDocument:
#          Version: '2012-10-17'
#          Statement:
#          - Effect: Allow
#            Action:
#            - logs:CreateLogGroup
#            - logs:CreateLogStream
#            - logs:PutLogEvents
#            Resource: arn:aws:logs:*:*:*
#          - Effect: Allow
#            Action:
#            - dynamodb:GetItem
#            Resource: arn:aws:dynamodb:*:*:table/users-table
  GetUser:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getUser
      Handler: user.getUser # nombre del archivo para la funcion lambda y nombre de la funcion
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref UsersTable
#      Role: !GetAtt MyLambdaRole.Arn
      Environment:
        Variables:
          USERS_TABLE: !Ref UsersTable # Para agregar USERS_TABLE como variable de entorno que hace referencia (!Ref) a UsersTable mas abajo
          
      Events:
        GetUsers:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/user/{userId}" # tiene que ser el mismo que en swagger.yaml
            Method: GET    

  PutUser:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putUser
      Handler: user.putUser # nombre del archivo para la funcion lambda y nombre de la funcion
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref UsersTable
#      Role: !GetAtt MyLambdaRole.Arn      
      Environment:
        Variables:
          USERS_TABLE: !Ref UsersTable # Para agregar USERS_TABLE como variable de entorno que hace referencia (!Ref) a UsersTable mas abajo
          
      Events:
        GetUsers:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI # haciendo referenca a la API de mas asbajo
            Path: "/user/{userId}" # tiene que ser el mismo que en wagger.yaml
            Method: PUT 
  
  MyAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: users-api
      StageName: prod
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: swagger.yaml
  
  UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users-table
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S